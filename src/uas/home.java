/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package uas;
import java.sql.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Azis Nurjaman
 */
public class home extends javax.swing.JFrame {
    DefaultTableModel tabModel;
    ResultSet rs;
    
    private void tampilData(String where){
        try{
            Object[] judul = {"Course Name", "Course Number", "Enrollment", "Start Date", "End Date"};
            tabModel = new DefaultTableModel(null, judul);
            Tab1.setModel(tabModel);
            
            Connection con = (Connection) Koneksi.konek();
            Statement st = con.createStatement();
            tabModel.getDataVector().removeAllElements();
            
            rs = st.executeQuery("SELECT * FROM course" + where);
            while (rs.next()){
                Object[] data = {
                  rs.getString("c_name"),
                  rs.getString("c_number"),
                  rs.getString("enrollment"),
                  rs.getString("start_date"),
                  rs.getString("end_date"),
                };
                tabModel.addRow(data);
            }
        } catch (SQLException e){
            System.err.println(e.getMessage());   
        }
    }
    
    public void refresh(){
        home Home = new home();
        Home.setVisible(true);
        dispose();
    }

    /**
     * Creates new form home
     */
    public home() {
        setTitle("Daftar Jenis Kursus");
        initComponents();
        tampilData("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Tab1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cName = new javax.swing.JTextField();
        cNumber = new javax.swing.JTextField();
        Enrollment = new javax.swing.JTextField();
        sDate = new javax.swing.JTextField();
        eDate = new javax.swing.JTextField();
        Add = new javax.swing.JButton();
        Update = new javax.swing.JButton();
        Delete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Tab1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Course Name", "Course Number", "Enrollment", "Start Date", "End Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Tab1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Tab1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Tab1);

        jLabel1.setText("Course Name");

        jLabel2.setText("Course Number");

        jLabel3.setText("Enrollment");

        jLabel4.setText("Start Date");

        jLabel5.setText("End Date");

        Add.setText("Add");
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });

        Update.setText("Update");
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });

        Delete.setText("Delete");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 654, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Add)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Update)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Delete)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(cName)
                            .addComponent(cNumber)
                            .addComponent(Enrollment)
                            .addComponent(sDate)
                            .addComponent(eDate))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(Enrollment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(sDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(eDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Add)
                    .addComponent(Update)
                    .addComponent(Delete))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed
        // TODO add your handling code here:
        try {
            int jawab;
            if ((jawab = JOptionPane.showConfirmDialog(null, "Are you sure want to add this data?", "Attention", JOptionPane.YES_NO_OPTION)) == 0) {
                Connection con = (Connection) Koneksi.konek();
                Statement st = con.createStatement();
                st.executeUpdate("INSERT INTO course (c_name, c_number, enrollment, start_date, end_date) VALUES"
                    + "('" + cName.getText() + "','" 
                    + cNumber.getText() + "','"
                    + Enrollment.getText() + "', '"
                    + sDate.getText() + "', '"
                    + eDate.getText() + "' )");
                refresh();
                tampilData("");
                JOptionPane.showMessageDialog(null, "Data has been added");
            }
        } catch (Exception e) {
           JOptionPane.showMessageDialog(null, "Course number already exist!", "Error!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_AddActionPerformed

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
        // TODO add your handling code here:
        try {
            int jawab;
            if ((jawab = JOptionPane.showConfirmDialog(null, "Are you sure want to add this data?", "Attention", JOptionPane.YES_NO_OPTION)) == 0) {
                Connection con = (Connection) Koneksi.konek();
                Statement st = con.createStatement();
                st.executeUpdate("UPDATE produks SET "
                    + "c_name = '" + cName.getText() + "', "
                    + "enrollment = '" + Enrollment.getText() + "', "
                    + "start_date = '" +sDate.getText() + "',"
                    + "end_date = '" + eDate.getText() + "' "
                    + "WHERE c_number = '" + cNumber.getText() + "'");
                refresh();
                tampilData("");
                JOptionPane.showMessageDialog(null, "Data has been updated");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Course number already exist!", "Error!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_UpdateActionPerformed

    private void Tab1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Tab1MouseClicked
        // TODO add your handling code here:
         boolean a = Tab1.isEditing();
        if(a == false){
            int jawab;
            if ((jawab = JOptionPane.showConfirmDialog(null, "Are you sure you want to select this data?", "Attention", JOptionPane.YES_NO_OPTION)) == 0) {
                cName.setText(Tab1.getValueAt(Tab1.getSelectedRow(), 0).toString());
                cNumber.setText(Tab1.getValueAt(Tab1.getSelectedRow(), 1).toString());
                Enrollment.setText(Tab1.getValueAt(Tab1.getSelectedRow(), 2).toString());
                sDate.setText(Tab1.getValueAt(Tab1.getSelectedRow(), 3).toString());
                eDate.setText(Tab1.getValueAt(Tab1.getSelectedRow(), 4).toString());
                cNumber.setEditable(false);
            }
        }
    }//GEN-LAST:event_Tab1MouseClicked

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        // TODO add your handling code here:
        try {
            int jawab;
            if (Tab1.getSelectedRow() < 0) {
                    JOptionPane.showMessageDialog(null, "Select data first");
            } else {
                if ((jawab = JOptionPane.showConfirmDialog(null, "Are you sure want to delete this data?", "Attention", JOptionPane.YES_NO_OPTION)) == 0) {
                    
                    Connection con = (Connection) Koneksi.konek();
                    Statement st = con.createStatement();
                    st = con.createStatement();
                    st.executeUpdate("DELETE FROM course WHERE c_number='"
                    + tabModel.getValueAt(Tab1.getSelectedRow(), 1) + "'");
                    tampilData("");
                    JOptionPane.showMessageDialog(null, "Data has been deleted");
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e, "Error!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_DeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add;
    private javax.swing.JButton Delete;
    private javax.swing.JTextField Enrollment;
    private javax.swing.JTable Tab1;
    private javax.swing.JButton Update;
    private javax.swing.JTextField cName;
    private javax.swing.JTextField cNumber;
    private javax.swing.JTextField eDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField sDate;
    // End of variables declaration//GEN-END:variables
}
